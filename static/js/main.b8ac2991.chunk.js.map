{"version":3,"sources":["App.jsx","reportWebVitals.js","index.js"],"names":["Main","props","state","items","window","fetch","then","res","json","setState","catch","error","console","log","this","Home","React","Component","DogView","message","src","Button","variant","onClick","location","reload","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAIMA,E,kDACJ,WAAaC,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,CAAEC,MAAO,IAFJ,E,qDAKpB,WAAsB,IAAD,OAEnBC,OACGC,MAFc,2CAGdC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GAAI,OAAI,EAAKC,SAAS,CAAEN,MAAOK,OACpCE,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,Q,oBAGhC,WAEE,OADAC,QAAQC,IAAIC,KAAKZ,OAEf,qCACE,sHACA,cAAC,EAAD,CAASC,MAAOW,KAAKZ,MAAMC,QAC3B,cAACY,EAAD,W,GArBWC,IAAMC,WA2BnBC,EAAU,SAAAjB,GAAU,IAChBkB,EAAYlB,EAAME,MAAlBgB,QACR,OACE,mCACE,qBAAKC,IAAKD,OAKhB,SAASJ,IAKP,OACE,8BACE,cAACM,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QANZ,WAClBnB,OAAOoB,SAASC,UAKd,4BAOSzB,QC1CA0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b8ac2991.chunk.js","sourcesContent":["import React from 'react'\nimport { Button } from '@material-ui/core'\nimport './App.css'\n\nclass Main extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = { items: {} }\n  }\n\n  componentDidMount () {\n    const DATA_URI = 'https://dog.ceo/api/breeds/image/random'\n    window\n      .fetch(DATA_URI)\n      .then(res => res.json())\n      .then(json => this.setState({ items: json }))\n      .catch(error => console.log(error))\n  }\n\n  render () {\n    console.log(this.state)\n    return (\n      <>\n        <h1>ランダムでいろんな犬を見よう</h1>\n        <DogView items={this.state.items} />\n        <Home />\n      </>\n    )\n  }\n}\n\nconst DogView = props => {\n  const { message } = props.items\n  return (\n    <>\n      <img src={message} />\n    </>\n  )\n}\n\nfunction Home () {\n  const refreshPage = () => {\n    window.location.reload()\n  }\n\n  return (\n    <div>\n      <Button variant='contained' onClick={refreshPage}>\n        更新\n      </Button>\n    </div>\n  )\n}\n\nexport default Main\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}